Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help 
you profile and understand the data just like a data scientist would. For this first part of the assignment, 
you will be assessed both on the correctness of your findings, as well as the code you used to arrive 
at your answer. You will be graded on how easy your code is to read, so remember to use proper 
formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences 
and analysis of the data for a particular research question you want to answer. 
You will be required to prepare the dataset for the analysis you choose to do. 
As with the first part, you will be graded, in part, on how easy your code is to read, 
so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are 
being asked, and your job will be to transfer your answers and SQL coding where indicated into 
this worksheet so that your peers can review your work. You should be able to use any Text Editor 
(Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. 
If you are going to use Word or some other page layout application, just be careful to make sure 
your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 
ii. Business table = 10000 
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. 
If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562 
iii. Category = 2643 
iv. Attribute = 1115 
v. Review = 10000 
vi. Checkin = 493 
vii. Photo = 10000
viii. Tip = 537 (user_id VARCHAR)
ix. User = 10000 
x. Friend = 11
xi. Elite_years = 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no." 

	Answer: "no"
	
	
	SQL code used to arrive at answer: 

	  SELECT *
       FROM user
        WHERE max (id,  name,  review_count,  yelping_since,  
		useful,   funny,    cool,  fans,  average_stars,  
		compliment_hot,  compliment_more,  compliment_profile, 
		compliment_cute,  compliment_list , compliment_note , 
		compliment_plain , compliment_cool , compliment_funny , 
		compliment_writer , compliment_photos) is null;
	
	

4. For each table and column listed below, display the smallest (minimum), largest (maximum), 
and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995 
		


5. List the cities with the most reviews in descending order: 

	SQL code used to arrive at answer:

      SELECT DISTINCT city, sum(review_count)
       FROM business
        GROUP BY city
         ORDER BY sum(review_count) DESC
	
	Copy and Paste the Result Below:
	+-----------------+-------------------+
	| city            | sum(review_count) |
	+-----------------+-------------------+
	| Las Vegas       |             82854 |
	| Phoenix         |             34503 |
	| Toronto         |             24113 |
	| Scottsdale      |             20614 |
	| Charlotte       |             12523 |
	| Henderson       |             10871 |
	| Tempe           |             10504 |
	| Pittsburgh      |              9798 |
	| Montréal        |              9448 |
	| Chandler        |              8112 |
	| Mesa            |              6875 |
	| Gilbert         |              6380 |
	| Cleveland       |              5593 |
	| Madison         |              5265 |
	| Glendale        |              4406 |
	| Mississauga     |              3814 |
	| Edinburgh       |              2792 |
	| Peoria          |              2624 |
	| North Las Vegas |              2438 |
	| Markham         |              2352 |
	| Champaign       |              2029 |
	| Stuttgart       |              1849 |
	| Surprise        |              1520 |
	| Lakewood        |              1465 |
	| Goodyear        |              1155 |
	+-----------------+-------------------+
	(Output limit exceeded, 25 of 362 total rows shown)
		

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars as 'star rating', COUNT('city') as 'count'
 FROM business
  WHERE city = 'Avon'
   GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------------+-------+
	| star rating | count |
	+-------------+-------+
	|         1.5 |     1 |
	|         2.5 |     2 |
	|         3.5 |     3 |
	|         4.0 |     2 |
	|         4.5 |     1 |
	|         5.0 |     1 |
	+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars as 'star rating', COUNT('city') as 'count'
 FROM business
  WHERE city = 'Beachwood'
    GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------------+-------+
	| star rating | count |
	+-------------+-------+
	|         2.0 |     1 |
	|         2.5 |     1 |
	|         3.0 |     2 |
	|         3.5 |     2 |
	|         4.0 |     1 |
	|         4.5 |     2 |
	|         5.0 |     5 |
	+-------------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:


SELECT name, review_count 
 FROM user
  ORDER BY review_count DESC
   LIMIT 3 
		
	Copy and Paste the Result Below:

	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results: 
	
	'No'
	
	SELECT fans, review_count
	 FROM user
	  ORDER BY review_count DESC
	   LIMIT 10

	+------+--------------+
	| fans | review_count |
	+------+--------------+
	|  253 |         2000 |
	|   50 |         1629 |
	|   76 |         1339 |
	|  101 |         1246 |
	|  126 |         1215 |
	|  311 |         1153 |
	|   16 |         1116 |
	|  104 |         1039 |
	|  497 |          968 |
	|  173 |          930 |
	+------+--------------+
	
The highest review_count (2000) received 253 fans while the second highest review_count (1629) 
received only 50 fans. Similarly, the third highest review_count (1339) received only 76 fans.
This means more reviews does not correlate with more fans.
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?  

	Answer:
	
	"love"                                    
 
	SQL code used to arrive at answer:

	SELECT (SELECT count(text)
			 FROM review
			  WHERE text like "%love%") as love, 

			(SELECT count(text) 
		      FROM review
			   WHERE text like "%hate%") as hate

	+------+------+
	| love | hate |
	+------+------+
	| 1780 |  232 |
	+------+------+


	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT fans, name
	 FROM user   
	  ORDER BY fans DESC
	   LIMIT 10
		
	
	Copy and Paste the Result Below:

	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category 
by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars 
and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

   ANSWER : "Yes, but not much. Businesses with 2-3 stars had working_days of 7, 
   while businesses with 4-5 stars had working_days of 6.
    
   CODE :	
   SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END stars,
        b.city, 
        c.category,
        count(distinct b.id) AS company_count,
        count(h.hours) AS working_days

		FROM business b
		JOIN hours h ON b.id = h.business_id
		JOIN category c ON b.id = c.business_id
	
			WHERE b.city = "Las Vegas" AND c.category = "Food"
				GROUP BY stars
    
	OUTPUT :
	+-----------+-----------+----------+---------------+--------------+
	| stars     | city      | category | company_count | working_days |
	+-----------+-----------+----------+---------------+--------------+
	| 2-3 stars | Las Vegas | Food     |             1 |            7 |
	| 4-5 stars | Las Vegas | Food     |             1 |            6 |
	+-----------+-----------+----------+---------------+--------------+


ii. Do the two groups you chose to analyze have a different number of reviews?
    
	ANSWER : "Yes, by a lot. Businesses with 2-3 stars had only 6 reviews while
	businesses with 4-5 stars had 30 reviews.
	
	CODE :
	SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END stars,
        b.city, 
        c.category,
        count(distinct b.id) AS company_count,
        review_count AS total_reviews

		FROM business b
		JOIN category c ON b.id = c.business_id

			WHERE city = "Las Vegas" AND c.category = "Food"
			GROUP BY stars
         
	OUTPUT :
	+-----------+-----------+----------+---------------+---------------+
	| stars     | city      | category | company_count | total_reviews |
	+-----------+-----------+----------+---------------+---------------+
	| 2-3 stars | Las Vegas | Food     |             1 |             6 |
	| 4-5 stars | Las Vegas | Food     |             1 |            30 |
	+-----------+-----------+----------+---------------+---------------+
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SQL code used for analysis:

ANSWER : "Yes, businesses that have 2-3 stars were in the eastside, 
while businesses with 4-5 stars were on the southeast.

CODE:
SELECT  CASE WHEN stars >= 4 THEN "4-5 stars"
             WHEN stars >= 2 THEN "2-3 stars"
             ELSE "below 2"
             END stars,
        address,
        neighborhood,
        city, 
        postal_code

	FROM business b
	JOIN category c ON b.id = c.business_id

		WHERE b.city = "Las Vegas" AND c.category = "Food"
		ORDER BY stars 

	OUTPUT:
	+-----------+-----------------------------+--------------+-----------+-------------+
	| stars     | address                     | neighborhood | city      | postal_code |
	+-----------+-----------------------------+--------------+-----------+-------------+
	| 2-3 stars | 3808 E Tropicana Ave        | Eastside     | Las Vegas | 89121       |
	| 4-5 stars | 8975 S Eastern Ave, Ste 3-B | Southeast    | Las Vegas | 89123       |
	+-----------+-----------------------------+--------------+-----------+-------------+

		
		
2. Group business based on the ones that are open and the ones that are closed.
 What differences can you find between the ones that are still open and the ones that are closed? 
 List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: "The number of businesses which are open are significantly
more than the ones that are closed"

         
ii. Difference 2: "The total reviews for businesses which are open are 
more than the ones that are closed"
         
         
         
SQL code used for analysis:

	SELECT CASE WHEN is_open = 1 THEN "STILL OPEN"
            WHEN is_open = 0 THEN "CLOSED"
            END status, 
        count(distinct b.id) AS num_business,
        sum(review_count) AS total_review,
        avg(review_count)

		FROM business b
		GROUP BY is_open

			ORDER BY status DESC


+------------+--------------+--------------+-------------------+
| status     | num_business | total_review | avg(review_count) |
+------------+--------------+--------------+-------------------+
| STILL OPEN |         8480 |       269300 |     31.7570754717 |
| CLOSED     |         1520 |        35261 |     23.1980263158 |
+------------+--------------+--------------+-------------------+
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to 
conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, 
clustering businesses to find commonalities or anomalies between them, predicting the overall star 
rating for a business, predicting the number of fans a user will have, and so on. These are just a few 
examples to get you started, so feel free to be creative and come up with your own problem you want to 
solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
   
   "Most number of successful businesses"
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis 
and why you chose that data:

   "For this analysis, the number of businesses, avg. stars, total number of reviews, is open and id 
    were taken from the business table and category respectively. Here the no. of businesses were
    calculated by counting the business_ids, while the sum of reviews and is open columns were also
	calculated respectively. The avg. star rating was also calculated.

	Based on the output, Health & Medical category had the most no. of successful businesses on 
	the basis that it had the most no of businesses (17) and had a very good avg star rating (4.08) 
	in proportion, a very good amount of reviews (203) and also had the most no. of stores which were
	open (16). This was followed by Local Services and Active Life category.

                           
                  
iii. Output of your finished dataset:

    +------------------+------------+---------------+---------------+---------+
	| category         | businesses |     avg_stars | total_reviews | is_open |
	+------------------+------------+---------------+---------------+---------+
	| Health & Medical |         17 | 4.08823529412 |           203 |      16 |
	| Local Services   |         12 | 4.20833333333 |           100 |      10 |
	| Active Life      |         10 |          4.15 |           131 |      10 |
	| Automotive       |          9 |           4.5 |           198 |       9 |
	| Hair Salons      |          6 | 4.08333333333 |            65 |       6 |
	| Bakeries         |          5 |           4.1 |           239 |       4 |
	| Doctors          |          5 |           4.2 |            55 |       5 |
	| Auto Repair      |          4 |         4.625 |           122 |       4 |
	| Fashion          |          4 |         4.625 |            21 |       3 |
	| Home & Garden    |          4 |          4.25 |            21 |       3 |
	+------------------+------------+---------------+---------------+---------+
         
         
iv. Provide the SQL code you used to create your final dataset:

	SELECT category, 
	COUNT (business_id) as businesses, 
	avg(b.stars) as avg_stars, 
	sum(b.review_count) as total_reviews,
	sum(b.is_open) as 'is_open'

		FROM business b 
		INNER JOIN category c on b.id = c.business_id

			GROUP BY category
			HAVING avg_stars > 4.0 
			ORDER BY businesses desc
			LIMIT 10

